#!/bin/bash

set -e

# Set up some variables for ETH wallets and pools

ETHWALLET="0xc91B3f6a889a9963c7eaE2d5BD5Ca88a6Ae2d2EA";
ETHWORKER="`hostname`";
# First choice for ETH is alpereum.ch, 0% fee and payout threshold 0.2 ETH
ETHPOOL1="stratum+tcp://pool.alpereum.ch:3001";
# Ethermine is also decent, 1% fee but payout threshold at 1 ETH to avoid fees. At 0.2 ETH, txfee of 0.005 would mean an extra 2.5% in fees.
ETHPOOL1="stratum+tcp://eu1.ethermine.org:4444";

ETHPOOL3="stratum+tcp://eth-eu2.nanopool.org:9999";

# Set up some variables for ETH wallets and pools

ETCWALLET="0x2699d8531BDE9606F257387fdf0EC7d498F6197c";
ETCWORKER="`hostname`";
ETCPOOL="stratum+tcp://etc-eu1.nanopool.org:19999";
ETCPOOL2="stratum+tcp://etc-eu2.nanopool.org:19999";
ETCPOOL3="stratum+tcp://eu1-etc.ethermine.org:4444";


date "+%s" > /dev/shm/miner.start


#Write out a startup script to /dev/shm/sgminer.tmp
#Reinitialise temp and startup batch files with the shebang

echo "#!/bin/bash" > /dev/shm/sgminer.tmp

#Write the desired arguments out into a temp file

cat << EOF | while read line; do echo "$line " >> /dev/shm/sgminer.tmp ; done; echo "" >> /dev/shm/sgminer.tmp
nice -n 10 sgminer 
# sgminer seems determined to write config files and reuse them, this should tell it otherwise
--default-config=/dev/null 
#--verbose 
#--debug 
#--protocol-dump 
#--text-only 
--per-device-stats
--log 1
--tcp-keepalive 30 
--queue 2
--gpu-threads 2 
--intensity 20 
--worksize 256 
--scan-time 7 
--expiry 28 
# quotas are arbitary and are used in proportion to the sum of all active quotas
# thus you can make quotas add up to 100 if you want them to be a percentage of your rig total
# or start them all at 100 if you want quotas as percentage of fair share
# the approach used by the author below is based on total quota of 100 per currency 
# when mining two currencies (ETH and ETC) this produces a 50/50 split between currencies
# and splits the rig hashrate 20% to first choice pool, 15% to second choice, 15% to third choice
# when all pools are enabled and alive. 
--load-balance 
#-U "20;$POOL2" -O $WALLET.$WORKER:x -p x -k ethash --no-extranonce 
-U "20;$ETCPOOL2" -O $ETCWALLET.$ETCWORKER:x -p x -k ethash --no-extranonce 
#-U "15;$POOL" -O $WALLET.$WORKER:x -p x -k ethash --no-extranonce 
-U "15;$ETCPOOL3" -O $ETCWALLET.$ETCWORKER:x -p x -k ethash --no-extranonce 
-U "15;$ETCPOOL" -O $ETCWALLET.$ETCWORKER:x -p x -k ethash --no-extranonce 
#-U "15;$POOL3" -O $WALLET.$WORKER:x -p x -k ethash --no-extranonce 
2>/dev/shm/sgminer.log
EOF

# Now build our actual startup script
echo "#!/bin/bash" > /dev/shm/sgminer


# Insert startup incantations to make settings to your GPUs

cat << 'EOF' | while read line; do echo "$line" >> /dev/shm/sgminer ; done;
export GPU_FORCE_64BIT_PTR=1
export GPU_USE_SYNC_OBJECTS=1
export GPU_MAX_ALLOC_PERCENT=100
export GPU_SINGLE_ALLOC_PERCENT=100
export GPU_MAX_HEAP_SIZE=100
ls -1 /sys/class/drm/card?/device/pp_sclk_od | while read gpu; do echo 15 > $gpu; done
ls -1 /sys/class/drm/card?/device/hwmon/hwmon?/pwm1 | while read gpu; do echo 120 > $gpu; done

EOF

# Now cat that batch file to another removing lines commented out which would break sgminer startup.
# This allows us to use a line-by-line approach above yet feed the parameters listed above and
# minus comments into our single-line invocation of sgminer.

cat /dev/shm/sgminer.tmp | grep -v "^#" | grep -v "^$" | while read line; do echo -n "$line " >> /dev/shm/sgminer ; done


# Make it executable and run it

chmod 700 /dev/shm/sgminer

echo "Attempting to start sgminer with the following startup script: "
echo ""
cat /dev/shm/sgminer

screen -AdmS sgminer -t sgminer /dev/shm/sgminer
screen -S sgminer -p sgminer -d -r

